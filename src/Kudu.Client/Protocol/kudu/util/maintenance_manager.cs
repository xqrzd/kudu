// This file was generated by a tool; you should avoid making direct changes.
// Consider using 'partial classes' to extend these types
// Input: maintenance_manager.proto

#pragma warning disable CS1591, CS0612, CS3021, IDE1006
namespace Kudu.Client.Protocol
{

    [global::ProtoBuf.ProtoContract()]
    public partial class MaintenanceManagerStatusPB : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"best_op")]
        public MaintenanceOpPB BestOp { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"registered_operations")]
        public global::System.Collections.Generic.List<MaintenanceOpPB> RegisteredOperations { get; } = new global::System.Collections.Generic.List<MaintenanceOpPB>();

        [global::ProtoBuf.ProtoMember(3, Name = @"running_operations")]
        public global::System.Collections.Generic.List<OpInstancePB> RunningOperations { get; } = new global::System.Collections.Generic.List<OpInstancePB>();

        [global::ProtoBuf.ProtoMember(4, Name = @"completed_operations")]
        public global::System.Collections.Generic.List<OpInstancePB> CompletedOperations { get; } = new global::System.Collections.Generic.List<OpInstancePB>();

        [global::ProtoBuf.ProtoContract()]
        public partial class MaintenanceOpPB : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1, Name = @"name", IsRequired = true)]
            public string Name { get; set; }

            [global::ProtoBuf.ProtoMember(2, Name = @"running", IsRequired = true)]
            public uint Running { get; set; }

            [global::ProtoBuf.ProtoMember(3, Name = @"runnable", IsRequired = true)]
            public bool Runnable { get; set; }

            [global::ProtoBuf.ProtoMember(4, Name = @"ram_anchored_bytes", IsRequired = true)]
            public ulong RamAnchoredBytes { get; set; }

            [global::ProtoBuf.ProtoMember(5, Name = @"logs_retained_bytes", IsRequired = true)]
            public long LogsRetainedBytes { get; set; }

            [global::ProtoBuf.ProtoMember(6, Name = @"perf_improvement", IsRequired = true)]
            public double PerfImprovement { get; set; }

        }

        [global::ProtoBuf.ProtoContract()]
        public partial class OpInstancePB : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1, Name = @"thread_id", IsRequired = true)]
            public long ThreadId { get; set; }

            [global::ProtoBuf.ProtoMember(2, Name = @"name", IsRequired = true)]
            public string Name { get; set; }

            [global::ProtoBuf.ProtoMember(3, Name = @"duration_millis")]
            public int DurationMillis
            {
                get { return __pbn__DurationMillis.GetValueOrDefault(); }
                set { __pbn__DurationMillis = value; }
            }
            public bool ShouldSerializeDurationMillis() => __pbn__DurationMillis != null;
            public void ResetDurationMillis() => __pbn__DurationMillis = null;
            private int? __pbn__DurationMillis;

            [global::ProtoBuf.ProtoMember(4, Name = @"millis_since_start", IsRequired = true)]
            public int MillisSinceStart { get; set; }

        }

    }

}

#pragma warning restore CS1591, CS0612, CS3021, IDE1006
