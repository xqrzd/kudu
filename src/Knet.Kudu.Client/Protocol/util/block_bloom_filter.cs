// This file was generated by a tool; you should avoid making direct changes.
// Consider using 'partial classes' to extend these types
// Input: block_bloom_filter.proto

#pragma warning disable CS1591, CS0612, CS3021, IDE1006
namespace Knet.Kudu.Client.Protocol
{

    [global::ProtoBuf.ProtoContract()]
    public partial class BlockBloomFilterPB : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"log_space_bytes")]
        public int LogSpaceBytes
        {
            get { return __pbn__LogSpaceBytes.GetValueOrDefault(); }
            set { __pbn__LogSpaceBytes = value; }
        }
        public bool ShouldSerializeLogSpaceBytes() => __pbn__LogSpaceBytes != null;
        public void ResetLogSpaceBytes() => __pbn__LogSpaceBytes = null;
        private int? __pbn__LogSpaceBytes;

        [global::ProtoBuf.ProtoMember(2, Name = @"bloom_data")]
        public byte[] BloomData
        {
            get { return __pbn__BloomData; }
            set { __pbn__BloomData = value; }
        }
        public bool ShouldSerializeBloomData() => __pbn__BloomData != null;
        public void ResetBloomData() => __pbn__BloomData = null;
        private byte[] __pbn__BloomData;

        [global::ProtoBuf.ProtoMember(3, Name = @"always_false")]
        public bool AlwaysFalse
        {
            get { return __pbn__AlwaysFalse.GetValueOrDefault(); }
            set { __pbn__AlwaysFalse = value; }
        }
        public bool ShouldSerializeAlwaysFalse() => __pbn__AlwaysFalse != null;
        public void ResetAlwaysFalse() => __pbn__AlwaysFalse = null;
        private bool? __pbn__AlwaysFalse;

        [global::ProtoBuf.ProtoMember(4, Name = @"hash_algorithm")]
        [global::System.ComponentModel.DefaultValue(HashAlgorithm.FastHash)]
        public HashAlgorithm HashAlgorithm
        {
            get { return __pbn__HashAlgorithm ?? HashAlgorithm.FastHash; }
            set { __pbn__HashAlgorithm = value; }
        }
        public bool ShouldSerializeHashAlgorithm() => __pbn__HashAlgorithm != null;
        public void ResetHashAlgorithm() => __pbn__HashAlgorithm = null;
        private HashAlgorithm? __pbn__HashAlgorithm;

        [global::ProtoBuf.ProtoMember(5, Name = @"hash_seed")]
        [global::System.ComponentModel.DefaultValue(0)]
        public uint HashSeed
        {
            get { return __pbn__HashSeed ?? 0; }
            set { __pbn__HashSeed = value; }
        }
        public bool ShouldSerializeHashSeed() => __pbn__HashSeed != null;
        public void ResetHashSeed() => __pbn__HashSeed = null;
        private uint? __pbn__HashSeed;

    }

}

#pragma warning restore CS1591, CS0612, CS3021, IDE1006
